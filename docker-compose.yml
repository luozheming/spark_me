version: '3.8'

services:
  spark-master:
    container_name: da-spark-master
    build: .
    image: da-spark-image
    entrypoint: ['start-master.sh','-p','7077']
    #entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    env_file:
      - env/.env
    ports:
      - '9090:8080'
      - '7077:7077'


  spark-history-server:
    container_name: da-spark-history
    image: da-spark-image
    entrypoint: ['start-history-server.sh']
    #entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - env/.env
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'

  spark-worker:
    #    container_name: da-spark-worker
    image: da-spark-image
    entrypoint: ['start-worker.sh','spark://spark-master:7077']
    #entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - env/.env
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events

  # clickhouse
  clickhouse_server:
    container_name: clickhouse-server
    image: yandex/clickhouse-server
    restart: always
    environment:
      POSTGRES_USER: ${CLICKHOUSE_USER}
      POSTGRES_PASSWORD: ${CLICKHOUSE_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
    volumes:
      - "./compose/graphite_rollup.xml:/etc/clickhouse-server/config.d/graphite_rollup.xml"
      - "./compose/clickhouse_metrics.xml:/etc/clickhouse-server/config.d/clickhouse_metrics.xml"
      - "./compose/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./data/clickhouse/:/var/lib/clickhouse/"
      - "./data/clickhouse/:/var/log/clickhouse-server/"
    ports:
      - "8123:8123"
    profiles:
      - clickhouse

volumes:
  spark-logs:
